@using Gatarr.Models.Radarr
@using Humanizer
@using Image = Gatarr.Models.Shared.Image

<div class="movieDetailsRoot" style="background-image: url(@Fanart?.remoteUrl)">
    <div class="fanArtOverlay" />
    <div class="movieDetailsContent">
        <Row>
            <GridCol Span="4">
                <Image Class="moviePoster" Src="@Poster?.remoteUrl" />
            </GridCol>
            <GridCol Span="20">
                <div class="movie">
                    <h1>@Movie.title</h1>
                    <div class="movieDetails">
                        <span class="certification">@Movie.certification</span>
                        
                        <Popover ContentTemplate="@_releaseContent" Title="Release Dates" Placement="@Placement.Bottom" Trigger="@(new[] { Trigger.Hover })">
                            <span class="release">@Movie.year</span>
                        </Popover>

                        <span class="runtime">@Movie.runtimeDisplay</span>
                        
                        <MovieLinks Movie="@Movie" />
                    </div>

                    <MovieRatings Ratings="@Movie.ratings" />

                    <Space Size=@(("8", "16")) Wrap Align="start">
                        <LabelledTextField Label="Path" Value="@Movie.path" />
                        <LabelledTextField Label="Status" Value="@Movie.status" />
                        <LabelledTextField Label="Quality Profile" Value="@Movie.qualityProfileId.ToString()" />
                        <LabelledTextField Label="Size" Value="@Movie.sizeOnDisk.Bytes().Humanize()" />
                        <LabelledTextField Label="Studio" Value="@Movie.studio" />
                        <LabelledTextField Label="Genres" Value="@string.Join(", ", Movie.genres)" />
                    </Space>

                    <div class="overview">
                        <span>@Movie.overview</span>
                    </div>
                </div>
            </GridCol>
        </Row>
    </div>
</div>

@code {
    [Parameter]
    public MovieResource Movie { get; set; }

    public Image Poster => Movie?.images?.FirstOrDefault(x => x.coverType == "poster");
    public Image Fanart => Movie?.images?.FirstOrDefault(x => x.coverType == "fanart");

    private RenderFragment _releaseContent =>
        @<div>
            <p><b>Theater Release Date:</b>@Movie.inCinemasDisplay</p>
            <p><b>Physical Release Date:</b> @Movie.physicalReleaseDisplay</p>
            <p><b>Digital Release Date:</b>@Movie.digitalReleaseDisplay</p>
        </div>;
}
