@using Gatarr.Models.Radarr
@using Gatarr.Models
@using Humanizer

<Tooltip Title="@IconType.Outline.Info">
    <Button Shape="@ButtonShape.Circle" Icon="@IconType.Outline.Info" OnClick="@(() => { _visible = true; })"/>
</Tooltip>
<Modal Title="@GetHeaderTitle()"
       Centered="true"
       Visible="@_visible"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel"
       Style="width: 90%; max-width: 1080px;">

    <table style="margin: 0 auto;">
        @GetModalBody()
    </table>

</Modal>

@code {
    [Parameter]
    public string EventType { get; set; }

    [Parameter]
    public string SourceTitle { get; set; }

    [Parameter]
    public Data Data { get; set; }

    bool _visible { get; set; }

    // Method taken from https://github.com/Radarr/Radarr/blob/master/frontend/src/Activity/History/Details/HistoryDetailsModal.js
    public string GetHeaderTitle()
    {
        return EventType switch
        {
            EventTypeConstants.Grabbed => "Grabbed",
            EventTypeConstants.DownloadFailed => "Download Failed",
            EventTypeConstants.DownloadFolderImported => "Movie Imported",
            EventTypeConstants.MovieFileDeleted => "Movie File Deleted",
            EventTypeConstants.MovieFileRenamed => "Movie File Renamed",
            EventTypeConstants.DownloadIgnored => "Download Ignored",
            _ => "Unknown"
        };
    }

    public RenderFragment GetModalBody()
    {
        return EventType switch
        {
            EventTypeConstants.Grabbed => @<GrabbedBody SourceTitle="@SourceTitle" Data="Data"/>,
            EventTypeConstants.DownloadFailed => @<DownloadFailedBody SourceTitle="@SourceTitle" Data="Data"/>,
            EventTypeConstants.DownloadFolderImported => @<DownloadFolderImportedBody SourceTitle="@SourceTitle" Data="Data"/>,
            EventTypeConstants.MovieFileDeleted => @<MovieFileDeletedBody SourceTitle="@SourceTitle" Data="Data"/>,
            EventTypeConstants.MovieFileRenamed => @<MovieFileRenamedBody SourceTitle="@SourceTitle" Data="Data"/>,
            EventTypeConstants.DownloadIgnored => @<DownloadIgnoredBody SourceTitle="@SourceTitle" Data="Data" />,
            _ => null
        };
    }

    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }
}
